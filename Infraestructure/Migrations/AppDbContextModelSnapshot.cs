// <auto-generated />
using System;
using Infraestructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infraestructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.ApprovalRule", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ApproverRoleId")
                        .HasColumnType("int");

                    b.Property<int?>("Area")
                        .HasColumnType("int");

                    b.Property<decimal>("MaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StepOrder")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApproverRoleId");

                    b.HasIndex("Area");

                    b.HasIndex("Type");

                    b.ToTable("ApprovalRule", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            ApproverRoleId = 1,
                            MaxAmount = 100000m,
                            MinAmount = 0m,
                            StepOrder = 1
                        },
                        new
                        {
                            Id = "2",
                            ApproverRoleId = 2,
                            MaxAmount = 20000m,
                            MinAmount = 5000m,
                            StepOrder = 2
                        },
                        new
                        {
                            Id = "3",
                            ApproverRoleId = 2,
                            Area = 2,
                            MaxAmount = 20000m,
                            MinAmount = 0m,
                            StepOrder = 1,
                            Type = 2
                        },
                        new
                        {
                            Id = "4",
                            ApproverRoleId = 3,
                            MaxAmount = 0m,
                            MinAmount = 20000m,
                            StepOrder = 3
                        },
                        new
                        {
                            Id = "5",
                            ApproverRoleId = 2,
                            Area = 1,
                            MaxAmount = 20000m,
                            MinAmount = 5000m,
                            StepOrder = 2,
                            Type = 1
                        },
                        new
                        {
                            Id = "6",
                            ApproverRoleId = 1,
                            MaxAmount = 10000m,
                            MinAmount = 0m,
                            StepOrder = 1,
                            Type = 2
                        },
                        new
                        {
                            Id = "7",
                            ApproverRoleId = 4,
                            Area = 2,
                            MaxAmount = 10000m,
                            MinAmount = 0m,
                            StepOrder = 1,
                            Type = 1
                        },
                        new
                        {
                            Id = "8",
                            ApproverRoleId = 2,
                            Area = 2,
                            MaxAmount = 30000m,
                            MinAmount = 10000m,
                            StepOrder = 2
                        },
                        new
                        {
                            Id = "9",
                            ApproverRoleId = 3,
                            Area = 3,
                            MaxAmount = 0m,
                            MinAmount = 30000m,
                            StepOrder = 2
                        },
                        new
                        {
                            Id = "10",
                            ApproverRoleId = 4,
                            MaxAmount = 50000m,
                            MinAmount = 0m,
                            StepOrder = 1,
                            Type = 4
                        });
                });

            modelBuilder.Entity("Domain.Entities.ApprovalStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.ToTable("ApprovalStatus", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Pending"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Approved"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Rejected"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Observed"
                        });
                });

            modelBuilder.Entity("Domain.Entities.ApproverRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.ToTable("ApproverRole", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Líder de Area"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Gerente"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Director"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Comite Técnico"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Area", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Finanzas"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Tecnología"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Recursos Humanos"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Operaciones"
                        });
                });

            modelBuilder.Entity("Domain.Entities.ProjectApprovalStep", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ApproverRoleId")
                        .HasColumnType("int");

                    b.Property<int?>("ApproverUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DecisionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observations")
                        .HasColumnType("varchar(max)");

                    b.Property<Guid>("ProjectProposalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StepOder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApproverRoleId");

                    b.HasIndex("ApproverUserId");

                    b.HasIndex("ProjectProposalId");

                    b.HasIndex("Status");

                    b.ToTable("ProjectApprovalStep", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.ProjectProposal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Area")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<decimal>("EstimatedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("EstimatedDuration")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Area");

                    b.HasIndex("CreateBy");

                    b.HasIndex("Status");

                    b.HasIndex("Type");

                    b.ToTable("ProjectProposal", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.ProjectType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.ToTable("ProjectType", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Mejora de Procesos"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Innovación y Desarrollo"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Infraestructura"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Capacitación Interna"
                        });
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Role");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "jferreyra@unaj.com",
                            Name = "José Ferreyra",
                            Role = 2
                        },
                        new
                        {
                            Id = 2,
                            Email = "alucero@unaj.com",
                            Name = "Ana Lucero",
                            Role = 1
                        },
                        new
                        {
                            Id = 3,
                            Email = "gmolinas@unaj.com",
                            Name = "Gonzalo Molinas",
                            Role = 2
                        },
                        new
                        {
                            Id = 4,
                            Email = "lolivera@unaj.com",
                            Name = "Lucas Olivera",
                            Role = 3
                        },
                        new
                        {
                            Id = 5,
                            Email = "dfagundez@unaj.com",
                            Name = "Danilo Fagundez",
                            Role = 4
                        },
                        new
                        {
                            Id = 6,
                            Email = "ggalli@unaj.com",
                            Name = "Gabriel Galli",
                            Role = 4
                        });
                });

            modelBuilder.Entity("Domain.Entities.ApprovalRule", b =>
                {
                    b.HasOne("Domain.Entities.ApproverRole", "ApproverRole")
                        .WithMany("ApprovalRules")
                        .HasForeignKey("ApproverRoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Area", "ProjectArea")
                        .WithMany("ApprovalRules")
                        .HasForeignKey("Area")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Domain.Entities.ProjectType", "ProjectType")
                        .WithMany("ApprovalRules")
                        .HasForeignKey("Type")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApproverRole");

                    b.Navigation("ProjectArea");

                    b.Navigation("ProjectType");
                });

            modelBuilder.Entity("Domain.Entities.ProjectApprovalStep", b =>
                {
                    b.HasOne("Domain.Entities.ApproverRole", "ApproverRole")
                        .WithMany("ProjectApprovalSteps")
                        .HasForeignKey("ApproverRoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("ProjectApprovalSteps")
                        .HasForeignKey("ApproverUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Domain.Entities.ProjectProposal", "ProjectProposal")
                        .WithMany("ProjectApprovalSteps")
                        .HasForeignKey("ProjectProposalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.ApprovalStatus", "ApprovalStatus")
                        .WithMany("ProjectApprovalSteps")
                        .HasForeignKey("Status")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ApprovalStatus");

                    b.Navigation("ApproverRole");

                    b.Navigation("ProjectProposal");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.ProjectProposal", b =>
                {
                    b.HasOne("Domain.Entities.Area", "ProjectArea")
                        .WithMany("ProjectProposals")
                        .HasForeignKey("Area")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("ProjectProposals")
                        .HasForeignKey("CreateBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.ApprovalStatus", "ApprovalStatus")
                        .WithMany("ProjectProposals")
                        .HasForeignKey("Status")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.ProjectType", "ProjectType")
                        .WithMany("ProjectProposals")
                        .HasForeignKey("Type")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ApprovalStatus");

                    b.Navigation("ProjectArea");

                    b.Navigation("ProjectType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.HasOne("Domain.Entities.ApproverRole", "ApproverRole")
                        .WithMany("Users")
                        .HasForeignKey("Role")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ApproverRole");
                });

            modelBuilder.Entity("Domain.Entities.ApprovalStatus", b =>
                {
                    b.Navigation("ProjectApprovalSteps");

                    b.Navigation("ProjectProposals");
                });

            modelBuilder.Entity("Domain.Entities.ApproverRole", b =>
                {
                    b.Navigation("ApprovalRules");

                    b.Navigation("ProjectApprovalSteps");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Domain.Entities.Area", b =>
                {
                    b.Navigation("ApprovalRules");

                    b.Navigation("ProjectProposals");
                });

            modelBuilder.Entity("Domain.Entities.ProjectProposal", b =>
                {
                    b.Navigation("ProjectApprovalSteps");
                });

            modelBuilder.Entity("Domain.Entities.ProjectType", b =>
                {
                    b.Navigation("ApprovalRules");

                    b.Navigation("ProjectProposals");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("ProjectApprovalSteps");

                    b.Navigation("ProjectProposals");
                });
#pragma warning restore 612, 618
        }
    }
}
